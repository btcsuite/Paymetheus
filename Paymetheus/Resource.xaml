<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paymetheus"
                    xmlns:helper="clr-namespace:Paymetheus.Helpers">

    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="White">
                        <Grid Height="Auto" Width="Auto" x:Name="Bd">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Margin="20,20,0,20" Source="Images/pm - icons - decrease.png" Stretch="Fill" Width="26" Height="Auto" HorizontalAlignment="Left"/>
                            <TextBlock HorizontalAlignment="Stretch" Margin="0,15,5,0" TextWrapping="Wrap" Text="College funds" VerticalAlignment="Top" Foreground="#FF0C1E3E" TextAlignment="Left" FontSize="10.667" Grid.Column="1" Height="14.187"/>
                            <TextBlock HorizontalAlignment="Stretch" Margin="0.903,15,0.403,0" TextWrapping="Wrap" Text="12 Mar 2016 14:57" VerticalAlignment="Top" Foreground="#FF0C1E3E" TextAlignment="Left" FontSize="10.667" Grid.Column="2" Height="14.187" FontWeight="Bold"/>
                            <TextBlock HorizontalAlignment="Stretch" Margin="0,0,3.708,18" TextWrapping="Wrap" Text="Tsbd8gLgheCTtx4WFcTk/97AAjFwWf5g" VerticalAlignment="Bottom" Foreground="#FFE2E2E2" TextAlignment="Left" FontSize="9.333" Grid.Column="1" Height="10.854" Grid.ColumnSpan="2"/>
                            <local:TransactionUserControl Status="Confirmed" Grid.Column="4" HorizontalAlignment="Stretch" Margin="0,15,0,0" VerticalAlignment="Top" Height="20"/>
                            <TextBlock HorizontalAlignment="Stretch" Margin="0.306,0,8.096,16" TextWrapping="Wrap" VerticalAlignment="Bottom" Foreground="#FFE2E2E2" TextAlignment="Left" FontSize="9.333" Grid.Column="4" Grid.ColumnSpan="1"><Run Text="0 confirm"/><Run Text="."/></TextBlock>
                            <TextBlock HorizontalAlignment="Right" Margin="0,13.56,65,0" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="#FF0C1E3E" TextAlignment="Right" FontSize="10.667" Grid.Column="6" Height="14.187" FontWeight="Bold"><Run Text="+10"/><Run FontWeight="Normal" FontSize="9.333" Text=".00"/></TextBlock>
                            <TextBlock HorizontalAlignment="Right" Margin="0,15,40,0" TextWrapping="Wrap" Text="DCR" VerticalAlignment="Top" Foreground="#FF0C1E3E" TextAlignment="Left" FontSize="9.333" Grid.Column="6" FontWeight="Normal"/>
                            <Rectangle Fill="#FFA9B4BF" Height="1" VerticalAlignment="Bottom" Margin="0" Grid.Row="0" Grid.ColumnSpan="7"/>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="helper:PasswordBoxWaterMark.IsMonitoring" Value="True"/>
        <Setter Property="helper:PasswordBoxWaterMark.WatermarkText" Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                        <Storyboard x:Key="enterHasText" >
                            <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText" >
                            <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Name="Bd" 
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="1" />
                            <TextBlock x:Name="Message" 
                                       Text="{TemplateBinding helper:PasswordBoxWaterMark.WatermarkText}" 
                                       Foreground="Gray" IsHitTestVisible="False" FontFamily="Calibri"
                                       Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="Bd"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helper:PasswordBoxWaterMark.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="helper:PasswordBoxWaterMark.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>